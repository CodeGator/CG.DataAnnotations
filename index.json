{
  "api/System.ComponentModel.DataAnnotations.EmailAddressListAttribute.html": {
    "href": "api/System.ComponentModel.DataAnnotations.EmailAddressListAttribute.html",
    "title": "Class EmailAddressListAttribute",
    "keywords": "Class EmailAddressListAttribute This class validates lists of email addresses. Inheritance System.Object System.Attribute System.ComponentModel.DataAnnotations.ValidationAttribute EmailAddressListAttribute Inherited Members System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.String) System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : System.ComponentModel.DataAnnotations Assembly : CG.DataAnnotations.dll Syntax [AttributeUsage(AttributeTargets.Property)] public sealed class EmailAddressListAttribute : ValidationAttribute Constructors EmailAddressListAttribute() This constructor creates a new instance of the EmailAddressListAttribute class. Declaration public EmailAddressListAttribute() Methods FormatErrorMessage(String) This method applies formatting to an error message. Declaration public override string FormatErrorMessage(string name) Parameters Type Name Description System.String name The name to include in the formatted message. Returns Type Description System.String An instance of the formatted error message. Overrides System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String) IsValid(Object) This method determines whether the specified value of the object is valid, or not. Declaration public override bool IsValid(object value) Parameters Type Name Description System.Object value The value of the object to validate. Returns Type Description System.Boolean true if the specified value is valid; false otherwise. Overrides System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)"
  },
  "api/System.ComponentModel.DataAnnotations.html": {
    "href": "api/System.ComponentModel.DataAnnotations.html",
    "title": "Namespace System.ComponentModel.DataAnnotations",
    "keywords": "Namespace System.ComponentModel.DataAnnotations Classes EmailAddressListAttribute This class validates lists of email addresses. PhoneListAttribute This class validates lists of phone numbers. ValidatableObject This class represents a base implementation of the System.ComponentModel.DataAnnotations.IValidatableObject object. ValidatableObjectExtensions This class contains extension methods related to the System.ComponentModel.DataAnnotations.IValidatableObject type. ValidatorEx This class provides methods we wish the System.ComponentModel.DataAnnotations.Validator class had provided."
  },
  "api/System.ComponentModel.DataAnnotations.PhoneListAttribute.html": {
    "href": "api/System.ComponentModel.DataAnnotations.PhoneListAttribute.html",
    "title": "Class PhoneListAttribute",
    "keywords": "Class PhoneListAttribute This class validates lists of phone numbers. Inheritance System.Object System.Attribute System.ComponentModel.DataAnnotations.ValidationAttribute PhoneListAttribute Inherited Members System.ComponentModel.DataAnnotations.ValidationAttribute.GetValidationResult(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.ComponentModel.DataAnnotations.ValidationContext) System.ComponentModel.DataAnnotations.ValidationAttribute.Validate(System.Object, System.String) System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessage System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceName System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageResourceType System.ComponentModel.DataAnnotations.ValidationAttribute.ErrorMessageString System.ComponentModel.DataAnnotations.ValidationAttribute.RequiresValidationContext System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : System.ComponentModel.DataAnnotations Assembly : CG.DataAnnotations.dll Syntax [AttributeUsage(AttributeTargets.Property)] public sealed class PhoneListAttribute : ValidationAttribute Constructors PhoneListAttribute() This constructor creates a new instance of the PhoneListAttribute class. Declaration public PhoneListAttribute() Methods FormatErrorMessage(String) This method applies formatting to an error message. Declaration public override string FormatErrorMessage(string name) Parameters Type Name Description System.String name The name to include in the formatted message. Returns Type Description System.String An instance of the formatted error message. Overrides System.ComponentModel.DataAnnotations.ValidationAttribute.FormatErrorMessage(System.String) IsValid(Object) This method determines whether the specified value of the object is valid, or not. Declaration public override bool IsValid(object value) Parameters Type Name Description System.Object value The value of the object to validate. Returns Type Description System.Boolean true if the specified value is valid; false otherwise. Overrides System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object)"
  },
  "api/System.ComponentModel.DataAnnotations.ValidatableObject.html": {
    "href": "api/System.ComponentModel.DataAnnotations.ValidatableObject.html",
    "title": "Class ValidatableObject",
    "keywords": "Class ValidatableObject This class represents a base implementation of the System.ComponentModel.DataAnnotations.IValidatableObject object. Inheritance System.Object ValidatableObject Implements System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : System.ComponentModel.DataAnnotations Assembly : CG.DataAnnotations.dll Syntax public abstract class ValidatableObject : IValidatableObject Methods Validate(ValidationContext) This method determines whether the specified object is valid. Declaration public virtual IEnumerable<ValidationResult> Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext The validation context. Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > A collection that holds failed-validation information. Implements System.ComponentModel.DataAnnotations.IValidatableObject Extension Methods ValidatableObjectExtensions.IsValid(IValidatableObject) ValidatableObjectExtensions.Validate(IValidatableObject) ValidatableObjectExtensions.ThrowIfInvalid(IValidatableObject)"
  },
  "api/System.ComponentModel.DataAnnotations.ValidatableObjectExtensions.html": {
    "href": "api/System.ComponentModel.DataAnnotations.ValidatableObjectExtensions.html",
    "title": "Class ValidatableObjectExtensions",
    "keywords": "Class ValidatableObjectExtensions This class contains extension methods related to the System.ComponentModel.DataAnnotations.IValidatableObject type. Inheritance System.Object ValidatableObjectExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : System.ComponentModel.DataAnnotations Assembly : CG.DataAnnotations.dll Syntax public static class ValidatableObjectExtensions Methods IsValid(IValidatableObject) This method determines if the object is currently valid. Declaration public static bool IsValid(this IValidatableObject validatableObject) Parameters Type Name Description System.ComponentModel.DataAnnotations.IValidatableObject validatableObject Returns Type Description System.Boolean True if the object is valid; false otherwise. Exceptions Type Condition System.ArgumentException This exception is thrown whenever the argument is missing, or null. ThrowIfInvalid(IValidatableObject) This method validates the current object and throws an exception with the contents of any failing validations. Declaration public static void ThrowIfInvalid(this IValidatableObject validatableObject) Parameters Type Name Description System.ComponentModel.DataAnnotations.IValidatableObject validatableObject Exceptions Type Condition System.ArgumentException This exception is thrown whenever the argument is missing, or null. System.ComponentModel.DataAnnotations.ValidationException This exception is thrown if any of the validation checks fail. Validate(IValidatableObject) This method validates the current object and returns the result of any failing validations. Declaration public static IEnumerable<ValidationResult> Validate(this IValidatableObject validatableObject) Parameters Type Name Description System.ComponentModel.DataAnnotations.IValidatableObject validatableObject Returns Type Description IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > A list of failing validations. Exceptions Type Condition System.ArgumentException This exception is thrown whenever the argument is missing, or null."
  },
  "api/System.ComponentModel.DataAnnotations.ValidatorEx.html": {
    "href": "api/System.ComponentModel.DataAnnotations.ValidatorEx.html",
    "title": "Class ValidatorEx",
    "keywords": "Class ValidatorEx This class provides methods we wish the System.ComponentModel.DataAnnotations.Validator class had provided. Inheritance System.Object ValidatorEx Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : System.ComponentModel.DataAnnotations Assembly : CG.DataAnnotations.dll Syntax public static class ValidatorEx Methods TryValidateObject(Object, ValidationContext, Nullable<ICollection<ValidationResult>>, Boolean, Boolean) This method tests whether the given object instance is valid. Declaration public static bool TryValidateObject(object instance, ValidationContext validationContext, ICollection<ValidationResult>? validationResults, bool validateAllProperties, bool recursive) Parameters Type Name Description System.Object instance The object instance to test. It cannot be null. System.ComponentModel.DataAnnotations.ValidationContext validationContext Describes the object to validate and provides services and context for the validators. System.Nullable < ICollection < System.ComponentModel.DataAnnotations.ValidationResult >> validationResults Optional collection to receive System.ComponentModel.DataAnnotations.ValidationResult s for the failures. System.Boolean validateAllProperties If true , also evaluates all properties of the object (this process is not recursive over properties of the properties). System.Boolean recursive Used to validate decorated properties on child objects. Returns Type Description System.Boolean true if the object is valid, false if any validation errors are encountered. Remarks This method evaluates all System.ComponentModel.DataAnnotations.ValidationAttribute s attached to the object instance's type. It also checks to ensure all properties marked with System.ComponentModel.DataAnnotations.RequiredAttribute are set. If validateAllProperties is true , this method will also evaluate the System.ComponentModel.DataAnnotations.ValidationAttribute s for all the immediate properties of this object. This process is recursive if the recursive property is set to true . If validationResults is null, then execution will abort upon the first validation failure. If validationResults is non-null, then all validation attributes will be evaluated. For any given property, if it has a System.ComponentModel.DataAnnotations.RequiredAttribute that fails validation, no other validators will be evaluated for that property. Exceptions Type Condition System.ArgumentNullException When instance is null. System.ArgumentException When instance doesn't match the System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance on validationContext ."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here!",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Introduction",
    "keywords": "Introduction CG.DataAnnotations.dll contains data annotation extensions used by other CodeGator packages."
  }
}